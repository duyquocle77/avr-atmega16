;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 18/05/2022
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;#include <delay.h>
;
;#define DK1 PORTA.0
;#define DK2 PORTA.1
;#define DK3 PORTA.2
;#define DK4 PORTA.3
;#define LED PORTB
;
;#define sbi(port, bit) {(port) |= (bit);}
;#define cbi(port, bit) {(port) &= ~(bit);}
;#define tbi(port, bit) {(port) ^= (bit);}
;
;const unsigned char num[17] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E, 0xBF};

	.DSEG
;
;void seg2digit(unsigned char x)
; 0000 002A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002B unsigned char temp, a, b;
; 0000 002C temp = x;
;PCODE: $0000000F VOL: 0
;	x -> Y+4
;	temp -> R17
;	a -> R16
;	b -> R19
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002D b = temp % 10;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002E a = temp / 10;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002F 
; 0000 0030 DK1 = 0;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0031 LED = num[a];
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0032 delay_ms(5);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0033 DK1 = 1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0034 
; 0000 0035 DK2 = 0;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0036 LED = num[b];
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0037 delay_ms(5);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0038 DK2 = 1;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0039 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;
;void seg4digit(unsigned long x)
; 0000 003C {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 003D unsigned long temp;
; 0000 003E unsigned char a, b, c, d;
; 0000 003F temp = x;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;	x -> Y+8
;	temp -> Y+4
;	a -> R17
;	b -> R16
;	c -> R19
;	d -> R18
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0040 d = temp % 10;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0041 temp = temp / 10;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0042 c = temp % 10;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0043 temp = temp / 10;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0044 b= temp % 10;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0045 a = temp / 10;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0046 
; 0000 0047 DK1 = 0;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0048 LED = num[a];
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0049 delay_ms(5);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 004A DK1 = 1;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 004B 
; 0000 004C DK2 = 0;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 004D LED = num[b];
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 004E delay_ms(5);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 004F DK2 = 1;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0050 
; 0000 0051 DK3 = 0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0052 LED = num[c];
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0053 delay_ms(5);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0054 DK3 = 1;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0055 
; 0000 0056 DK4 = 0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0057 LED = num[d];
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0058 delay_ms(5);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0059 DK4 = 1;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 005A }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;
;void main(void)
; 0000 005D {
;PCODE: $0000008A VOL: 0
; 0000 005E unsigned char i, y;
; 0000 005F unsigned long x;
; 0000 0060 
; 0000 0061 PORTA=0xFF;
;PCODE: $0000008B VOL: 0
;	i -> R17
;	y -> R16
;	x -> Y+0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0062 DDRA=0xFF;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0063 
; 0000 0064 
; 0000 0065 PORTB=0xFF;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0066 DDRB=0xFF;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0067 
; 0000 0068 
; 0000 0069 PORTC=0x00;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 006A DDRC=0x01;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 006B 
; 0000 006C 
; 0000 006D PORTD=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 006E DDRD=0x00;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 006F x = 990;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0070 y = 0;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0071 i = 0;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0072 while (1)
;PCODE: $000000A2 VOL: 0
; 0000 0073       {
; 0000 0074              seg2digit(y);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0075              i++;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0076              if(i > 100) //100*(5+5)=1000ms=1s
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0077              {
; 0000 0078              if(y < 60)
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0079              {
; 0000 007A              y++;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 007B 
; 0000 007C              }
; 0000 007D              else
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 007E              {
; 0000 007F              y = 0;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0080              }
;PCODE: $000000B3 VOL: 0
; 0000 0081              i = 0;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0082              }
; 0000 0083              if(y%10==0)
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0084              {
; 0000 0085              PORTC=0x01;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0086              delay_ms(1000);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0087              PORTC=0x00;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0088              }
; 0000 0089       }
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 008A }
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
