;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 25/05/2022
;Author  : NeVaDa
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;#include <delay.h>
;
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;
;#define LED PORTB.0
;
;unsigned int xung = 0;
;
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0027 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0028     xung++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0029     LED = 1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002A }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;void hienthilcd_1(unsigned char x, unsigned y)
; 0000 002D {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002E     char *buffer;
; 0000 002F     xung *= 10;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;	x -> Y+4
;	y -> Y+2
;	*buffer -> R16,R17
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0030     itoa(xung, buffer);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0031     lcd_gotoxy(x, y);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0032     lcd_puts(buffer);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0033 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; void hienthilcd_2(unsigned char x, unsigned y)
; 0000 0035 {
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0036 lcd_gotoxy(x ,y);
;	x -> Y+2
;	y -> Y+0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0037 /*lcd_putchar(xung/10000000 +48);
; 0000 0038 lcd_putchar(xung/1000000%10 +48);
; 0000 0039 lcd_putchar(xung/100000%10 +48); */
; 0000 003A lcd_putchar(xung/10000 +48);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003B lcd_putchar(xung/1000%10 +48);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 003C lcd_putchar(xung/100%10 +48);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003D lcd_putchar(xung/10%10 +48);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003E lcd_putchar(xung%10 +48);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003F }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0044 {
;PCODE: $00000061 VOL: 0
; 0000 0045 // Declare your local variables here
; 0000 0046 
; 0000 0047 // Input/Output Ports initialization
; 0000 0048 // Port A initialization
; 0000 0049 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004B PORTA=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 004C DDRA=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 004D 
; 0000 004E // Port B initialization
; 0000 004F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0050 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0051 PORTB=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0052 DDRB=0x01;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0053 
; 0000 0054 // Port C initialization
; 0000 0055 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0056 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0057 PORTC=0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0058 DDRC=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0059 
; 0000 005A // Port D initialization
; 0000 005B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 005D PORTD=0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 005E DDRD=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 005F 
; 0000 0060 // Timer/Counter 0 initialization
; 0000 0061 // Clock source: System Clock
; 0000 0062 // Clock value: 0.977 kHz
; 0000 0063 // Mode: Normal top=0xFF
; 0000 0064 // OC0 output: Disconnected
; 0000 0065 TCCR0=0x05;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0066 TCNT0=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0067 OCR0=0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0068 
; 0000 0069 // Timer/Counter 1 initialization
; 0000 006A // Clock source: System Clock
; 0000 006B // Clock value: Timer1 Stopped
; 0000 006C // Mode: Normal top=0xFFFF
; 0000 006D // OC1A output: Discon.
; 0000 006E // OC1B output: Discon.
; 0000 006F // Noise Canceler: Off
; 0000 0070 // Input Capture on Falling Edge
; 0000 0071 // Timer1 Overflow Interrupt: Off
; 0000 0072 // Input Capture Interrupt: Off
; 0000 0073 // Compare A Match Interrupt: Off
; 0000 0074 // Compare B Match Interrupt: Off
; 0000 0075 TCCR1A=0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0076 TCCR1B=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0077 TCNT1H=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0078 TCNT1L=0x00;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0079 ICR1H=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 007A ICR1L=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 007B OCR1AH=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 007C OCR1AL=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 007D OCR1BH=0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 007E OCR1BL=0x00;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 007F 
; 0000 0080 // Timer/Counter 2 initialization
; 0000 0081 // Clock source: System Clock
; 0000 0082 // Clock value: Timer2 Stopped
; 0000 0083 // Mode: Normal top=0xFF
; 0000 0084 // OC2 output: Disconnected
; 0000 0085 ASSR=0x00;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0086 TCCR2=0x00;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0087 TCNT2=0x00;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0088 OCR2=0x00;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0089 
; 0000 008A // External Interrupt(s) initialization
; 0000 008B // INT0: On
; 0000 008C // INT0 Mode: Rising Edge
; 0000 008D // INT1: Off
; 0000 008E // INT2: Off
; 0000 008F GICR|=0x40;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0090 MCUCR=0x03;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0091 MCUCSR=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0092 GIFR=0x40;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0093 
; 0000 0094 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0095 TIMSK=0x01;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0096 
; 0000 0097 // USART initialization
; 0000 0098 // USART disabled
; 0000 0099 UCSRB=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 009A 
; 0000 009B // Analog Comparator initialization
; 0000 009C // Analog Comparator: Off
; 0000 009D // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 009E ACSR=0x80;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 009F SFIOR=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00A0 
; 0000 00A1 // ADC initialization
; 0000 00A2 // ADC disabled
; 0000 00A3 ADCSRA=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00A4 
; 0000 00A5 // SPI initialization
; 0000 00A6 // SPI disabled
; 0000 00A7 SPCR=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00A8 
; 0000 00A9 // TWI initialization
; 0000 00AA // TWI disabled
; 0000 00AB TWCR=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00AC 
; 0000 00AD // Alphanumeric LCD initialization
; 0000 00AE // Connections specified in the
; 0000 00AF // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00B0 // RS - PORTA Bit 0
; 0000 00B1 // RD - PORTA Bit 1
; 0000 00B2 // EN - PORTA Bit 2
; 0000 00B3 // D4 - PORTA Bit 4
; 0000 00B4 // D5 - PORTA Bit 5
; 0000 00B5 // D6 - PORTA Bit 6
; 0000 00B6 // D7 - PORTA Bit 7
; 0000 00B7 // Characters/line: 16
; 0000 00B8 lcd_init(16);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00B9 
; 0000 00BA // Global enable interrupts
; 0000 00BB #asm("sei")
;PCODE: $000000AE VOL: 0
	sei
;PCODE: $000000AF VOL: 0
; 0000 00BC xung = 0;
;PCODE: $000000B0 VOL: 0
; 0000 00BD while (1)
;PCODE: $000000B1 VOL: 0
; 0000 00BE       {
; 0000 00BF 
; 0000 00C0       while(TCNT0 < 97);
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00C1       //xung *= 10;
; 0000 00C2       LED = 0;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00C3       hienthilcd_1(0,0);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00C4       hienthilcd_2(0,1);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00C5       TCNT0 = 0;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00C6       xung = 0;
;PCODE: $000000C6 VOL: 0
; 0000 00C7 
; 0000 00C8       }
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00C9 }
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
